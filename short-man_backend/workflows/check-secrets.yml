name: Check Secrets
on:
  workflow_dispatch: {}
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Echo only safe values (no secrets printed)
        run: |
          echo "SUPABASE_URL=$SUPABASE_URL"
          echo "Has VITE_SUPABASE_ANON_KEY? $([[ -n "$VITE_SUPABASE_ANON_KEY" ]] && echo YES || echo NO)"
          echo "Has SUPABASE_SERVICE_ROLE_KEY? $([[ -n "$SUPABASE_SERVICE_ROLE_KEY" ]] && echo YES || echo NO)"
          echo "Has SUPABASE_DB_URL? $([[ -n "$SUPABASE_DB_URL" ]] && echo YES || echo NO)"
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      - name: Quick REST reachability (anon, read-only)
        run: |
          set -e
          curl -sS -I "${SUPABASE_URL}/rest/v1/"             -H "apikey: ${VITE_SUPABASE_ANON_KEY}"             -H "Authorization: Bearer ${VITE_SUPABASE_ANON_KEY}" | head -n 1
          echo "✅ REST reachable with anon key"
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      - name: DB connectivity check via psql (no value printed)
        run: |
          set -e
          sudo apt-get update >/dev/null && sudo apt-get install -y postgresql-client >/dev/null
          psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -c "select 1 as ok;"
          echo "✅ psql connected using SUPABASE_DB_URL"
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
